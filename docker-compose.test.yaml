
services:
  climsoft_nginx_proxy:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: climsoft-nginx-proxy
    restart: always
    ports: # Expose to external network
      - "${HOST_HTTP_PORT}:80"
      #- "${HOST_HTTPS_PORT}:443" # Use this if HTTPS is required
    #volumes:
      #- ./certs:/etc/nginx/certs:ro # Use this if HTTPS is required
    depends_on:
      - climsoft_pwa
      - climsoft_api
    networks:
      - climsoft_network

  climsoft_pwa:
    build:
      context: ./front-end/pwa
      dockerfile: Dockerfile
    container_name: climsoft-pwa
    restart: always
    environment:
      HOST_IP_ADDRESS: "${HOST_IP_ADDRESS}" # used in config.json.
      HOST_HTTP_PORT: "${HOST_HTTP_PORT}" # used in config.json.
    expose: 
      - 80 # Expose to internal network only.
    depends_on:
      - climsoft_api
    networks:
      - climsoft_network

  climsoft_api:
    build:
      context: ./back-end/api
      dockerfile: Dockerfile
    container_name: climsoft-api
    restart: always
    environment:
      DB_HOST: climsoft_db
      DB_PORT: 5432
      DB_NAME: climsoft
      DB_USERNAME: postgres
      DB_PASSWORD: "${DB_PASSWORD}"
    expose: 
      - "3000:3000" # Expose to both external and internal network because of saving to mariadb
    depends_on:
      - climsoft_db
    networks:
      - climsoft_network

  climsoft_db:
    image: postgis/postgis:17-3.4
    container_name: climsoft-db
    restart: always
    environment:
      POSTGRES_DB: climsoft # Default database postgres will create, required when setting up postgres the first time.
      POSTGRES_USER: postgres # Uses the default postgres username for simplicity, required when setting up postgres the first time.
      POSTGRES_PASSWORD: ${DB_PASSWORD} # Super user password, required when setting up postgres the first time.
    ports: 
      - "5432:5432" # Expose to both external and internal network only.
    volumes:
      - climsoft_test_data:/var/lib/postgresql/data
    networks:
      - climsoft_network

volumes:
  climsoft_test_data:

networks:
  climsoft_network: